[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "los-generation"
version = "1.0.0"
description = "Learning Objectives Generation Pipeline using RAG for Thai entrance exams"
authors = ["Claude Code <noreply@anthropic.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.115.0"
uvicorn = "^0.24.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
celery = {extras = ["redis"], version = "^5.3.4"}
qdrant-client = "^1.7.0"
pydantic = "^2.5.0"
pydantic-ai = "^0.0.13"
langfuse = "^2.60.0"
tenacity = "^8.2.3"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.0"
python-multipart = "^0.0.6"
aiofiles = "^23.2.0"
httpx = "^0.27.2"
click = "^8.1.7"
pymupdf = "^1.23.8"
langchain = "^0.1.0"
langchain-text-splitters = "^0.0.1"
google-generativeai = "^0.3.2"
sentence-transformers = "^2.2.2"
numpy = "*"
markdownify = "^0.11.6"
dvc = "^3.48.4"
slowapi = "^0.1.9"
# OCR and Image Processing
pytesseract = "^0.3.10"
pillow = "^10.0.1"
pdf2image = "^1.16.3"
opencv-python = "^4.8.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
prometheus-client = "^0.19.0"
structlog = "^23.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"
pytest-mock = "^3.12.0"
httpx = "^0.27.2"
factory-boy = "^3.3.0"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "qdrant_client.*",
    "sentence_transformers.*",
    "langchain.*",
    "google.generativeai.*",
    "pymupdf.*",
    "markdownify.*",
    "langfuse.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=html --cov-report=term-missing --cov-fail-under=80"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]