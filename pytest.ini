[tool:pytest]
# Pytest configuration
minversion = 6.0
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=60
    --durations=10
    --asyncio-mode=auto

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    performance: Performance tests
    slow: Slow running tests (> 1 second)
    database: Tests that require database
    external: Tests that require external services
    mock: Tests using mocks
    api: API endpoint tests
    service: Service layer tests
    config: Configuration tests
    circuit_breaker: Circuit breaker tests
    rate_limit: Rate limiting tests

# Test filters
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Asyncio configuration
asyncio_mode = auto

# Test output
console_output_style = progress
junit_family = xunit2

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */migrations/*
    */venv/*
    */env/*
    */__pycache__/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

[coverage:html]
directory = htmlcov
